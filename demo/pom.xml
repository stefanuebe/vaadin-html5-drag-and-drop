<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dnd-demo</artifactId>
    <name>HTML5 Drag and Drop Extension Demo</name>

    <packaging>war</packaging>

    <parent>
        <groupId>org.vaadin.stefan</groupId>
        <artifactId>dnd-parent</artifactId>
        <version>1.1.1-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.vaadin.stefan</groupId>
            <artifactId>dnd</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <webapp.directory>src/main/webapp</webapp.directory>
    </properties>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <packagingExcludes>
                            %regex[WEB-INF/lib/slf4j-simple.*.jar],
                            %regex[WEB-INF/lib/tomcat.*.jar]
                        </packagingExcludes>
                        <failOnMissingWebXml>${failOnMissingWebXml}</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Vaadin-Package-Version>1</Vaadin-Package-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.3.7.v20160115</version>
                <configuration>
                    <scanIntervalSeconds>2</scanIntervalSeconds>
                    <!-- Use test scope because the UI/demo classes are in
                        the test package. -->
                    <useTestScope>false</useTestScope>
                    <!--<webAppConfig>-->
                    <!--&lt;!&ndash; This is only needed to be able to unzip webjars-->
                    <!--directly into src/test/webjar-debug and modify them for testing &ndash;&gt;-->
                    <!--<resourceBase>src/test/webjar-debug/META-INF/resources</resourceBase>-->
                    <!--</webAppConfig>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${webapp.directory}/frontend-es5</directory>
                        </fileset>
                        <fileset>
                            <directory>${webapp.directory}/frontend-es6</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>productionMode</id>
            <activation>
                <property>
                    <name>vaadin.productionMode</name>
                </property>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>copy-production-files</goal>
                                    <goal>package-for-production</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!--<configuration>-->
                            <!--<bundle>true</bundle>-->
                            <!--<fragments>-->
                                <!--<fragment>-->
                                    <!--<name>mobile-dnd</name>-->
                                    <!--<files>-->
                                        <!--<file>bower_components/mobile-drag-drop/release/default.css</file>-->
                                        <!--<file>bower_components/mobile-drag-drop/release/index.min.js</file>-->
                                        <!--<file>bower_components/mobile-drag-drop/release/scroll-behaviour.min.js</file>-->
                                    <!--</files>-->
                                <!--</fragment>-->
                            <!--</fragments>-->
                        <!--</configuration>-->

                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>


